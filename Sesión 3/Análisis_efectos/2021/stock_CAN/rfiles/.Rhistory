rm(list=ls())
data(one)
ls()
sapply(ls(), function(x) class(get(x)))
s0 <- FLBEIA(biols = oneBio,       # FLBiols object with one FLBiol element for stk1.
SRs = oneSR,        # A list with one FLSRSim object for stk1.
BDs = NULL,         # No Biomass dynamics populations in this case.
fleets = oneFl,        # FLFleets object with one fleet.
covars = oneCv,        # Covar is and object with aditional data on fleet (number of vessels, etc).
indices = NULL,         # Indices not used
advice = oneAdv,       # A list with two elements 'TAC' and 'quota.share'
main.ctrl = oneMainC,     # A list with one element to define the start and end of the simulation.
biols.ctrl = oneBioC,      # A list with one element to select the model to simulate the stock dynamics.
fleets.ctrl = oneFlC,       # A list with several elements to select fleet dynamics models and store additional parameters.
covars.ctrl = oneCvC,       # A list with several data related to the fleet.
obs.ctrl = oneObsC,      # A list with one element to define how the stock observed ("PerfectObs").
assess.ctrl = oneAssC,      # A list with one element to define how the stock assessment model used ("NoAssessment").
advice.ctrl = oneAdvC)      # A list with one element to define how the TAC advice is obtained ("IcesHCR").
names(s0)
sapply(s0, function(x) class(x))
s0_bio    <- bioSum(s0)           # Data frame (DF) of biological indicators.
s0_bio
s0_adv    <- advSum(s0)           # DF of management advice (TAC).
s0_flt    <- fltSum(s0)           # DF of economics indicators at fleet level.
s0_fltStk <- fltStkSum(s0)        # DF of indicators at fleet and stock level.
s0_mt     <- mtSum(s0)            # DF of indicators at fleet.
s0_mtStk  <- mtStkSum(s0)         # DF of indicators at fleet and metier level.
s0_vessel <- vesselSum(s0)        # DF of indicators at vessel level.
s0_vesselStk <- vesselStkSum(s0)  # DF of indicators at vessel and stock level.
s0_npv  <- npv(s0, y0 = '2014')   # DF of net present value per fleet over the selected range of years.
s0_risk <- riskSum(s0, Bpa = c(stk1= 135000), Blim = c(stk1= 96000), Prflim = c(fl1 = 0))
s0_risk
head(s0_bio); unique(s0_bio$indicator)
head(s0_adv); unique(s0_adv$indicator)
head(s0_flt); unique(s0_flt$indicator)
head(s0_fltStk); unique(s0_fltStk$indicator)
head(s0_mt); unique(s0_mt$indicator)
head(s0_mtStk); unique(s0_mtStk$indicator)
head(s0_vessel); unique(s0_vessel$indicator)
head(s0_vesselStk); unique(s0_vesselStk$indicator)
head(s0_risk); unique(s0_risk$indicator)
s0_bio_l    <- bioSum(s0, long = FALSE, years = ac(2016:2020))
s0_adv_l    <- advSum(s0, long = FALSE, years = ac(2016:2020))
s0_flt_l    <- fltSum(s0, long = FALSE, years = ac(2016:2025))
s0_fltStk_l <- fltStkSum(s0, long = FALSE, years = ac(2016:2020))
s0_mt_l     <- mtSum(s0, long = FALSE, years = ac(2016:2020))
s0_mtStk_l  <- mtStkSum(s0, long = FALSE, years = ac(2016:2020))
s0_vessel_l <- vesselSum(s0, long = FALSE, years = ac(2016:2020))
s0_vesselStk_l <- vesselStkSum(s0, long = FALSE, years = ac(2016:2020))
head(s0_bio_l, 2)
head(s0_adv_l, 2)
head(s0_flt_l, 2)
head(s0_fltStk_l, 2)
head(s0_mt_l, 2)
head(s0_mtStk_l, 2)
head(s0_vessel_l, 2)
head(s0_vesselStk_l, 2)
plot(s0$stocks[[1]]) # FLStock
plot(s0$biols[[1]])  # FLBiol
plot(s0$stocks[[1]]) # FLStock
plotFLBiols(s0$biols, pdfnm="s0")
plotFLFleets(s0$fleets, pdfnm="s0")
plotEco(s0, pdfnm="s0")
plotfltStkSum(s0, pdfnm="s0")
aux <- subset(s0_bio, indicator=="catch" )
p <- ggplot(data=aux, aes(x=year, y=value, color=stock))+
geom_line()+
geom_vline(xintercept = 2016, linetype = "longdash")+
theme_bw()+
theme(text=element_text(size=8),
title=element_text(size=8,face="bold"),
strip.text=element_text(size=8))+
ylab("Catch (t)")
print(p)
head(s0_bio); unique(s0_bio$indicator)
head(s0_adv); unique(s0_adv$indicator)
dev.off()
oneSR$stk1@model # bevholtAR1
?bevholtAR1
save.image("C:/Users/mauricio.ibarra/Documents/IFOP/Cursos y Capacitaciones/2019/Copenhagen/Clases/Orden de presentaciones/Día_2/Ejemplos/MI_FLBEI_ESPACIO_DE_TRABAJO.RData")
load("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/CBA_Camarón nailon/CTP2019/Tercer Informe consolidado/Análisis de CPUE/Zona norte/Ambiente_marzo_2019.RData")
modelo5a<-lmer(log(REND) ~ TRIM+BARCO+PROFZ+(1|ANO_REC/ZONE),
data = datacpuenorte)
library(speedglm)
library(Matrix)
library(RODBC)
library(car)
library(gamlss)
library(phia)
library(nlme)
library(lme4)
library(AICcmodavg)
library(gdata)
library(pgirmess)
library(extRemes)
library(stats)
library(tseries)
library(Matrix)
library(MASS)
library(lattice)
library(merTools)
library(lmerTest)
library(languageR)
modelo5a<-lmer(log(REND) ~ TRIM+BARCO+PROFZ+(1|ANO_REC/ZONE),
data = datacpuenorte)
anova(modelo5a, test="Chisq")
anova(modelo5a, test="F")
random.effects(modelo5a)
summary(modelo5a)
rnorm(30, 0, 2)
gen.corr.data<- function(rho,n){
# first step: generate two normal random variables from normal distrbution
x1 <- rnorm(n)
x2 <- rnorm(n)
# second step generate the correlated variable
x3<- rho*x1 + sqrt(1-rho^2)*x2
result <-cbind(x3,x1)
return(result)
}
muestra<-gen.corr.data(0.8,100)
plot(muestra)
cor(muestra)
View(muestra)
muestra<-gen.corr.data(0.8,100)
muestra
rm(list=ls())
library(speedglm)
library(Matrix)
library(RODBC)
library(car)
library(gamlss)
library(phia)
library(nlme)
library(lme4)
library(AICcmodavg)
library(gdata)
library(pgirmess)
library(extRemes)
library(stats)
library(tseries)
library(Matrix)
library(MASS)
library(lattice)
library(merTools)
library(lmerTest)
library(languageR)
install.packages("sizeMat")
library(sizeMat)
install.packages("sizeMat")
devtools::install_github("ejosymart/sizeMat")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2021/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2021/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S2<-reptoRlist("base.rep") # salidas base 2016
names(S2)
std2<-read.table("base.std",header=T,sep="",na="NA",fill=T)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/output")
S3<-reptoRlist("base.rep") # salidas base 2016
names(S3)
std3<-read.table("base.std",header=T,sep="",na="NA",fill=T)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S4<-reptoRlist("base.rep") # salidas base 2016
names(S4)
std4<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
population_mean_2020 <- getLast(std[std$name=="log_Fh",,]$value)
population_mean_2020 <- last(std[std$name=="log_Fh",,]$value)
population_mean_2020 <- last(stdstd$name=="log_Fh")
class(std)
View(std)
std[199,"value"]
exp(std[199,"value"])
View(std)
std[199,"value"]
population_sd_2020 <- exp(std[199,"std.dev"])
population_sd_2020
population_mean_2020 <- exp(std[199,"value"])
population_mean_2020
View(std2)
population_mean_2019 <-  exp(std2[196,"value"])
population_sd_2019 <- exp(std2[196,"std.dev"])
View(std3)
View(std4)
population_mean_2020 <- exp(std[199,"value"])
population_sd_2020 <- exp(std[199,"std.dev"])
class(std)
#define population mean and standard deviation 2019
population_mean_2019 <-  exp(std2[196,"value"])
population_sd_2019 <- exp(std2[196,"std.dev"])
#define population mean and standard deviation 2018
population_mean_2018 <-  exp(std3[193,"value"])
population_sd_2018 <- exp(std3[193,"std.dev"])
#define population mean and standard deviation 2017
population_mean_2017 <- exp(std4[190,"value"])
population_sd_2017 <- exp(std4[190,"std.dev"])
windows()
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 4000,
to = 7000,
col = "brown4",
xlab = "Biomasa desovante virgen (t)",
ylab = "Densidad",
main = "Densidades de BDo")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 1,
col = "brown4",
xlab = "Biomasa desovante virgen (t)",
ylab = "Densidad",
main = "Densidades de BDo")
population_sd_2019 <- std2[196,"std.dev"]
population_sd_2020 <- std[199,"std.dev"]
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 1,
col = "brown4",
xlab = "Biomasa desovante virgen (t)",
ylab = "Densidad",
main = "Densidades de BDo")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 1,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 0.6,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 6,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 0.6,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 1,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 2,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 3,
col = "orange",
add = TRUE)
population_mean_2020 <- exp(std[199,"value"])
population_sd_2020 <- std[199,"std.dev"]
class(std)
#define population mean and standard deviation 2019
population_mean_2019 <-  exp(std2[196,"value"])
population_sd_2019 <- std2[196,"std.dev"]
#define population mean and standard deviation 2018
population_mean_2018 <-  exp(std3[193,"value"])
population_sd_2018 <- exp(std3[193,"std.dev"])
#define population mean and standard deviation 2017
population_mean_2017 <- exp(std4[190,"value"])
population_sd_2017 <- exp(std4[190,"std.dev"])
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 0.6,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 0.6,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 1,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 2,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 2,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 2,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 4,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 4,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 4,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from = 0,
to = 4,
col = "green4",
add = TRUE)
population_sd_2020 <- std[199,"std.dev"]
population_sd_2019 <- std2[196,"std.dev"]
population_sd_2018 <- std3[193,"std.dev"]
population_sd_2017 <- std4[190,"std.dev"]
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 4,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 4,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 4,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from = 0,
to = 4,
col = "green4",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 0.8,
col = "brown4",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 0.8,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 0.8,
col = "orange",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = 0,
to = 0.8,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from = 0,
to = 0.8,
col = "brown4",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from = 0,
to = 0.8,
col = "green4",
add = TRUE)
population_sd_2020 <- log(std[199,"std.dev"])
population_sd_2019 <- log(std2[196,"std.dev"])
population_sd_2018 <- log(std3[193,"std.dev"])
population_sd_2017 <- log(std4[190,"std.dev"])
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = 0,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
windows()
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = -0.5,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
population_sd_2020 <- std[199,"std.dev"]
population_sd_2019 <- std2[196,"std.dev"]
population_sd_2018 <- std3[193,"std.dev"]
population_sd_2017 <- std4[190,"std.dev"]
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = -0.5,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = -0.5,
to = 0.8,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from =-0.5,
to = 0.8,
col = "brown4",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from =-0.5,
to = 0.8,
col = "green4",
add = TRUE)
legend(x = "topright",
legend = paste("CBA_", 2021:2020:2019:2018), cex = 1.3,
col = c("brown4", "blue", "orange", "green4"),
lty = 1, lwd = 2)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = -0.5,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = -0.5,
to = 0.8,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from =-0.5,
to = 0.8,
col = "brown4",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from =-0.5,
to = 0.8,
col = "green4",
add = TRUE)
legend(x = "topright",
legend = paste("CBA_", 2021:2020:2019:2018), cex = 1.3,
col = c("brown4", "blue", "orange", "green4"),bty="n",
lty = 1, lwd = 2)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2021/stock_CAN/figures/figure_12.png",
width=1200, height=700)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2018, sd = population_sd_2018),
from = -0.5,
to = 0.8,
col = "orange",
xlab = "Mortalidad por pesca (F)",
ylab = "Densidad",
main = "Densidades de F")
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2019, sd = population_sd_2019),
from = -0.5,
to = 0.8,
col = "blue",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2020, sd = population_sd_2020),
from =-0.5,
to = 0.8,
col = "brown4",
add = TRUE)
plot.function(x = function(t) dnorm(x = t, mean = population_mean_2017, sd = population_sd_2017),
from =-0.5,
to = 0.8,
col = "green4",
add = TRUE)
legend(x = "topright",
legend = paste("CBA_", 2021:2020:2019:2018), cex = 1.3,
col = c("brown4", "blue", "orange", "green4"),bty="n",
lty = 1, lwd = 2)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2021/stock_CAN/rfiles")
save.image(file = "file_10.RData")
