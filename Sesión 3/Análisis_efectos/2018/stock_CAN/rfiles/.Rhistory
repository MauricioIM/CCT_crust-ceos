ylab="Biomasa (t)",las=1,xlab="Año",cex.lab=1.4, cex.axis=1, main = "Biomasa total (t)")
polygon(xx1, yy1, col="grey", border = "grey");lines  (years,Bs1)
#####BIOMASA DESOVANTE#######
plot(xx2, yy2, type="n", ylim=c(0,max(yy2)),
ylab="Biomasa (ton)",las=1,xlab="Año",cex.lab=1.4, main = "Biomasa desovante (t)")
polygon(xx2, yy2, col="gray", border = "gray");lines  (years,Bd1)
#####RECLUTAMIENTO HEMBRAS#######
plot(xx4, yy4, type="n", ylim=c(0,max(yy4)),
ylab="Reclutas (millones de hembras)",las=1,xlab="Año",cex.lab=1.4, main = "Reclutamiento")
polygon(xx4, yy4, col="gray", border = "gray");lines  (years,Recl)
abline(h=R0,col="black",lwd=1.5)
#####MORTALIDAD POR PESCA HEMBRAS#######
plot(xx, yy5, type="n", ylim=c(0,max(yy5)),
ylab="Mortalidad por pesca (F)",las=1,xlab="Año",cex.lab=1.4, main = "Mortalidad por pesca")
polygon(xx, yy5, col="gray", border = "gray");lines  (years,Fh)
#abline(h=R0,col="black",lwd=1.5)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "BT_BD_Rec_F.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
#plot normal distribution with customized x-axis labels
#png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
#    width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "Ro", ylab = "Probabilidad",
main = "Distribución de probabilidad de Ro")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.1), pos = 4042.18)
plot(x,y, type = "l", lwd = 2, axes = T, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
plot(x,y, type = "l", lwd = 2, axes = T, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "file_4.RData")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
abline(v=0.4*population_mean, col="red")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=0.4*population_mean, col="red")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=0.4*population_mean, col="red")
abline(v =(0.4*population_mean), col="red")
population_mean
abline(v =(0.4*4938.5), col="red")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v =(0.4*4938.5), col="red")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
abline(v =(0.4*4938.5), col="red")
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v =(0.4*4938.5), col="red")
BDo = 0.4*4938.5
BDo
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v =BDo, col="red")
plot(x,y, type = "l", lwd = 2, axes = T, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v =BDo, col="red")
abline(v =BDo, y, col="red")
abline(v=1975.4, col="red")
windows()
abline(v=1975.4, col="red")
plot(x,y, type = "l", lwd = 2, axes = T, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
lower_bound <- population_mean - 1.96*population_sd
upper_bound <- population_mean + 1.96*population_sd
lower_bound <- population_mean - 3*population_sd
upper_bound <- population_mean + 3*population_sd
lower_bound <- 1000
upper_bound <- 9000
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
plot(x,y, type = "l", lwd = 2, axes = T, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
plot(x,y, type = "l", lwd = 2, axes = T, xlim = c(1000, 9000), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
plot(x,y, type = "l", lwd = 2, axes = T, xlim = c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
plot(x,y, type = "l", lwd = 2, axes = T, xlim = c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
windows()
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
lower_bound <- 1500
upper_bound <- 8500
lower_bound <- 1500
upper_bound <- 8500
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
lower_bound <- 1500
upper_bound <- 8500
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500),
xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
dev.off()
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=1975.4, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "file_5.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
#plot normal distribution with customized x-axis labels
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_4.png",
width=1200, height=700)
#windows()
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "file_5.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
#plot normal distribution with customized x-axis labels
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
width=1200, height=700)
windows()
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
#abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
width=1200, height=700)
windows()
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "file_4.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
BDo = 0.4*4938.5
#plot normal distribution with customized x-axis labels
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
#abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2018/stock_CAN/rfiles")
save.image(file = "file_4.RData")
