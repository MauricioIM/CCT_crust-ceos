lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "Ro", ylab = "Probabilidad",
main = "Distribución de probabilidad de Ro")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.1), pos = 743.2230)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/figures/figure_2.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "Ro", ylab = "Probabilidad",
main = "Distribución de probabilidad de Ro")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.1), pos = 743.2230)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/rfiles")
save.image(file = "file_3.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
y <- dnorm(x, population_mean, population_sd)
population_mean
BDo = 0.4*5901.8
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
dev.off()
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4879.04)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4879.04)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/rfiles")
save.image(file = "file_4.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(mgcv)
library(reshape)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
population_mean
BDo = 0.4*5901.8
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 9000, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 9000, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2019/stock_CAN/rfiles")
save.image(file = "file_5.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
ano <- seq(1961,2019,1)
anos <- seq(1961,2019,1)
years <- seq(1961,2019,1)
length(anos)
names(S1)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
#trellis.device(color=F)
library(nlme)
table(std$name)
names(std)
R0 <- exp(std[std$name=="log_Ro",,]$value)
class(R0)
length(anos)
B <- read.table("base.std",header=T,sep="",na="NA",fill=T)
#--------------------------------------#
# Elementos para Gráfico BIOMASA Total #
#--------------------------------------#
Bs    <- B[B[,2]=="BT",,]; Bs1 <- matrix(Bs$value,ncol=1) # Biomasa anual
Bs_Li <- matrix((Bs$value-1.96*Bs$std),ncol=1)                               # Límite inferior Biomasa anual
Bs_Ls <- matrix((Bs$value+1.96*Bs$std),ncol=1)                               # Límite superior Biomasa anual
xx1 <- c(years,rev(years))
yy1 <- c(Bs_Li,rev(Bs_Ls))
##------------------------------------##
## Elementos para Grafico BIOMASA DESOVANTE          ##
##------------------------------------##
Bd    <- B[B[,2]=="BD",,]; Bd1  <- matrix(Bd$value,ncol=1)                   # Biomasa desovante
Bd_Li <- matrix((Bd$value-1.96*Bd$std),ncol=1)                               # Límite inferior Biomasa desovante
Bd_Ls <- matrix((Bd$value+1.96*Bd$std),ncol=1)                               # Límite superior Biomasa desovante
xx2    <- c(years,rev(years))
yy2    <- c(Bd_Li,rev(Bd_Ls))
##------------------------------------##
## Elementos para Grafico Reclutamiento          ##
##------------------------------------##
Rh    <- B[B[,2]=="RecH",,]; Recl  <- matrix(Rh$value,ncol=1)                   # Biomasa desovante
Rh_Li <- matrix((Rh$value-Rh$std),ncol=1)                               # Límite inferior Biomasa desovante
Rh_Ls <- matrix((Rh$value+Rh$std),ncol=1)                               # Límite superior Biomasa desovante
xx4    <- c(years,rev(years))
yy4    <- c(Rh_Li,rev(Rh_Ls))
##------------------------------------ ##
## Elementos para Grafico Mortalidad por pesca          ##
##------------------------------------##
Fh <- std[std$name=="log_Fh",,]$value
Fh <- exp(Fh)
Fh_std <- std[std$name=="log_Fh",,]$std.dev
xx<-c(anos,rev(anos)) #polígonos
yy5 <- c((Fh-Fh_std*1.28), rev(Fh+Fh_std*1.28))
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/figures/figure_1.png",
width=1200, height=700)
par(mfrow=c(2,2),mar=c(4,8,1,0.5)+1)
plot   (xx1, yy1, type="n", ylim=c(5000,max(yy1)),
ylab="Biomasa (t)",las=1,xlab="Año",cex.lab=1.4, cex.axis=1, main = "Biomasa total (t)")
polygon(xx1, yy1, col="grey", border = "grey");lines  (years,Bs1)
#####BIOMASA DESOVANTE#######
plot(xx2, yy2, type="n", ylim=c(0,max(yy2)),
ylab="Biomasa (ton)",las=1,xlab="Año",cex.lab=1.4, main = "Biomasa desovante (t)")
polygon(xx2, yy2, col="gray", border = "gray");lines  (years,Bd1)
#####RECLUTAMIENTO HEMBRAS#######
plot(xx4, yy4, type="n", ylim=c(0,max(yy4)),
ylab="Reclutas (millones de hembras)",las=1,xlab="Año",cex.lab=1.4, main = "Reclutamiento")
polygon(xx4, yy4, col="gray", border = "gray");lines  (years,Recl)
abline(h=R0,col="black",lwd=1.5)
#####MORTALIDAD POR PESCA HEMBRAS#######
plot(xx, yy5, type="n", ylim=c(0,max(yy5)),
ylab="Mortalidad por pesca (F)",las=1,xlab="Año",cex.lab=1.4, main = "Mortalidad por pesca")
polygon(xx, yy5, col="gray", border = "gray");lines  (years,Fh)
#abline(h=R0,col="black",lwd=1.5)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
save.image(file = "file_2.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
population_mean <- exp(std[std$name=="log_Ro",,]$value)
population_sd <- exp(std[std$name=="log_Ro",,]$std.dev)
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "Ro", ylab = "Probabilidad",
main = "Distribución de probabilidad de Ro")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.1), pos = 732.3844)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/figures/figure_2.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "Ro", ylab = "Probabilidad",
main = "Distribución de probabilidad de Ro")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.1), pos = 732.3844)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
save.image(file = "file_3.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
#####DENSIDAD DE BDo###########
#define population mean and standard deviation
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
#create a vector of values that shows the height of the probability distribution
#for each value in x
y <- dnorm(x, population_mean, population_sd)
population_mean
BDo = 0.4*5817.2
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4042.18)
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4776.16)
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/figures/figure_3.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = axis_bounds, pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 4776.16)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
save.image(file = "file_4.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
population_mean <- std[std$name=="SSBo",,]$value
population_sd <- std[std$name=="SSBo",,]$std.dev
#define upper and lower bound
lower_bound <- population_mean - population_sd
upper_bound <- population_mean + population_sd
#Create a sequence of 1000 x values based on population mean and standard deviation
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
y <- dnorm(x, population_mean, population_sd)
population_mean
BDo = 0.4*5817.2
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/figures/figure_4.png",
width=1200, height=700)
plot(x,y, type = "l", lwd = 2, axes = F, xlim=c(1500, 8500), xlab = "BDo", ylab = "Probabilidad",
main = "Distribución de probabilidad de BDo")
abline(v=BDo, col="red")
sd_axis_bounds = 5
axis_bounds <- seq(-sd_axis_bounds * population_sd + population_mean,
sd_axis_bounds * population_sd + population_mean,
by = population_sd)
axis(side = 1, at = seq(1500, 8500, by=500), pos = 0, xlab="Probabilidad")
axis(side = 2, at = seq(0, 1, by=0.001), pos = 1500)
legend("topright", c("Densdidad", "40%BDo"), lty=c(1,1),
pch=c(NA,NA), col=c("black", "red"),
bty="n", cex=1.3, lwd=c(2,2))
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
save.image(file = "file_5.RData")
rm(list=ls())           # Limpieza de variables del ambiente, útil cada vez que empezamos un nuevo análisis
library(gplots)
library(ggplot2)
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
library(nlme)
library(plotrix)
## cargan salidas reporte modelo ##
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
getwd()
source("file_1.R")
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/output")
S1<-reptoRlist("base.rep") # salidas base 2016
names(S1)
std<-read.table("base.std",header=T,sep="",na="NA",fill=T)
table(std$name)
names(std)
ano <- seq(1961,2019,1)
#---------------------------------------------#
anos <- seq(1961,2019,1)
years <- seq(1961,2019,1)
############# Reemplazo valores 0  por NA, para graficar ##########
#class(R0prom)
length(anos)
names(S1)
########## BIOMASAS ##########
#----------------#
#Cargar librerias#
#----------------#
library(reshape)
#library(FLEDA)
library(mgcv)
library(lattice)
#trellis.device(color=F)
library(nlme)
#-------------------------------#
# cargan salidas reporte modelo #
#-------------------------------#
#--------------------------#
# Elimino celdas sin datos #
#--------------------------#
table(std$name)
names(std)
R0 <- exp(std[std$name=="log_Ro",,]$value)
class(R0)
length(anos)
#-------------------------------------------------#
# Se abre el archivo STD arrojado por el ADMB #
B <- read.table("base.std",header=T,sep="",na="NA",fill=T)
#--------------------------------------#
# Elementos para Gráfico BIOMASA Total #
#--------------------------------------#
Bs    <- B[B[,2]=="BT",,]; Bs1 <- matrix(Bs$value,ncol=1) # Biomasa anual
Bs_Li <- matrix((Bs$value-1.96*Bs$std),ncol=1)                               # Límite inferior Biomasa anual
Bs_Ls <- matrix((Bs$value+1.96*Bs$std),ncol=1)                               # Límite superior Biomasa anual
xx1 <- c(years,rev(years))
yy1 <- c(Bs_Li,rev(Bs_Ls))
##------------------------------------##
## Elementos para Grafico BIOMASA DESOVANTE          ##
##------------------------------------##
Bd    <- B[B[,2]=="BD",,]; Bd1  <- matrix(Bd$value,ncol=1)                   # Biomasa desovante
Bd_Li <- matrix((Bd$value-1.96*Bd$std),ncol=1)                               # Límite inferior Biomasa desovante
Bd_Ls <- matrix((Bd$value+1.96*Bd$std),ncol=1)                               # Límite superior Biomasa desovante
xx2    <- c(years,rev(years))
yy2    <- c(Bd_Li,rev(Bd_Ls))
##------------------------------------##
## Elementos para Grafico Reclutamiento          ##
##------------------------------------##
Rh    <- B[B[,2]=="RecH",,]; Recl  <- matrix(Rh$value,ncol=1)                   # Biomasa desovante
Rh_Li <- matrix((Rh$value-Rh$std),ncol=1)                               # Límite inferior Biomasa desovante
Rh_Ls <- matrix((Rh$value+Rh$std),ncol=1)                               # Límite superior Biomasa desovante
xx4    <- c(years,rev(years))
yy4    <- c(Rh_Li,rev(Rh_Ls))
##------------------------------------ ##
## Elementos para Grafico Mortalidad por pesca          ##
##------------------------------------##
Fh <- std[std$name=="log_Fh",,]$value
Fh <- exp(Fh)
Fh_std <- std[std$name=="log_Fh",,]$std.dev
xx<-c(anos,rev(anos)) #polígonos
yy5 <- c((Fh-Fh_std*1.28), rev(Fh+Fh_std*1.28))
png(file="C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/figures/figure_1.png",
width=1200, height=700)
par(mfrow=c(2,2),mar=c(4,8,1,0.5)+1)
plot   (xx1, yy1, type="n", ylim=c(5000,max(yy1)),
ylab="Biomasa (t)",las=1,xlab="Año",cex.lab=1.4, cex.axis=1, main = "Biomasa total (t)")
polygon(xx1, yy1, col="grey", border = "grey");lines  (years,Bs1)
#####BIOMASA DESOVANTE#######
plot(xx2, yy2, type="n", ylim=c(0,max(yy2)),
ylab="Biomasa (ton)",las=1,xlab="Año",cex.lab=1.4, main = "Biomasa desovante (t)")
polygon(xx2, yy2, col="gray", border = "gray");lines  (years,Bd1)
#####RECLUTAMIENTO HEMBRAS#######
plot(xx4, yy4, type="n", ylim=c(0,max(yy4)),
ylab="Reclutas (millones de hembras)",las=1,xlab="Año",cex.lab=1.4, main = "Reclutamiento")
polygon(xx4, yy4, col="gray", border = "gray");lines  (years,Recl)
abline(h=R0,col="black",lwd=1.5)
#####MORTALIDAD POR PESCA HEMBRAS#######
plot(xx, yy5, type="n", ylim=c(0,max(yy5)),
ylab="Mortalidad por pesca (F)",las=1,xlab="Año",cex.lab=1.4, main = "Mortalidad por pesca")
polygon(xx, yy5, col="gray", border = "gray");lines  (years,Fh)
#abline(h=R0,col="black",lwd=1.5)
dev.off()
setwd("C:/Users/mauricio.ibarra/Documents/IFOP/Proyectos/CTP/Orden_carpetas_crustáceos/2020/stock_CAN/rfiles")
save.image(file = "file_2.RData")
